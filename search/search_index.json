{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mesa de Pebolim para Treino Membros","title":"Home"},{"location":"#mesa-de-pebolim-para-treino","text":"","title":"Mesa de Pebolim para Treino"},{"location":"#membros","text":"","title":"Membros"},{"location":"eap/","text":"Work Breakdown Structure Dicion\u00e1rio 1.0 Software para Mesa de Pebolim para Treinamento 1.1 PUDM O Pebolim Unified Data Model (PUDM) \u00e9 uma modelagem de dados criada para permitir a utiliza\u00e7\u00e3o de diversos Machine Controllers na arquitetura da mesa de pebolim. A ideia deste modelo de dados surge a partir do conceito de Interface nas linguagem de programa\u00e7\u00e3o orientadas a objetos, onde esta representa uma estrutura que funciona como um contrato, garantindo que as classes que a pertencem implementem determinados m\u00e9todos. O PUDM faz este papel de contrato, por\u00e9m para os sistemas envolvidos na mesa de pebolim automatizada, governando como deve ser feita a comunica\u00e7\u00e3o entre o controlador desta mesa com o Servidor de Decis\u00e3o e garantindo a compatibilidade entre os sistemas. \u00c9/N\u00e3o \u00c9 Pacotes de trabalho 1.1.1 Defini\u00e7\u00e3o de padr\u00e3o de comunica\u00e7\u00e3o: Definir qual formato de comunica\u00e7\u00e3o e qual o padr\u00e3o a ser utilizado entre o cliente e o servidor do PUDM 1.1.2 Defini\u00e7\u00e3o de requisitos para compatibilidade de implementa\u00e7\u00e3o: Definir quais s\u00e3o as fun\u00e7\u00f5es necess\u00e1rias para que um sistema seja compat\u00edvel com o PUDM 1.2 Controlador de M\u00e1quina O Controlador de Maquina representa o componente que interage diretamente com os motores na mesa de pebolim. \u00c9 respons\u00e1vel por converter os comandos recebidos do Servidor de Decis\u00e3o em movimentos na mesa. Al\u00e9m disso, \u00e9 respons\u00e1vel por coletar os dados f\u00edsicos e enviar para o Servidor de Decis\u00e3o. Implementa o lado cliente do PUDM. \u00c9/N\u00e3o \u00c9 Pacotes de trabalho 1.3 Servidor de Decis\u00e3o O Servidor de Decis\u00e3o do Pebolim \u00e9 a camada respons\u00e1vel por receber os dados encaminhados pela interface PUDM e realizar infer\u00eancias de controle a partir desses dados com os estados disponibilizados pelo Machine Controller da mesa. A ideia de criar um servi\u00e7o independente para fazer decis\u00e3o e usar uma interface para interagir diretamente com comandos de controle \u00e9 tirar a respons\u00e1bilidade de formata\u00e7\u00e3o e adapta\u00e7\u00e3o de dados e garantir uma respons\u00e1bilidade \u00fanica por camada dentro do projeto. No caso o servidor de decis\u00e3o seguiria a seguintes etapas: figura 1: fluxo principal do servidor de decis\u00e3o. Como abordado na figura acima, o servidor come\u00e7a tratando os dados encaminhados pela interface para o padr\u00e3o adequado ao processamento. Como estamos lidando com dados gerados por v\u00eddeos, \u00e9 encaminhado os dados atrav\u00e9s de um JSON contendo a posi\u00e7\u00e3o das hastes e o frame atual gerado. Quando \u00e9 feito o decode da image, \u00e9 aplicado um algoritmo de rastreamento usando t\u00e9cnicas de vis\u00e3o computacional, onde \u00e9 estimada a posi\u00e7\u00e3o da bola atrav\u00e9s dos hist\u00f3rico de frames encaminhados durante o jogo de Pebolim. Com a posi\u00e7\u00e3o da bola e os dados da posi\u00e7\u00e3o da haste, \u00e9 analisado a dist\u00e2ncia de ambos e um calculo de trajet\u00f3ria \u00e9 estimado. Com os c\u00e1lculos realizado, \u00e9 poss\u00edvel designar uma dire\u00e7\u00e3o para a haste mais pr\u00f3xima a bola localizada e \u00e9 levantado a possibilidade de rota\u00e7\u00e3o do eixo da haste para contra ataque. Ap\u00f3s a execu\u00e7\u00e3o de todo o fluxo, \u00e9 feito um encode de todos os dados recolhidos nas etapas descritas anteriormente e uma nova mensagem \u00e9 encaminhada de volta para a interface de controle com os novos comandos a serem designados aos motores. \u00c9/N\u00e3o \u00c9 Pacotes de trabalho","title":"Estrutura Anal\u00edtica do Projeto"},{"location":"eap/#work-breakdown-structure","text":"","title":"Work Breakdown Structure"},{"location":"eap/#dicionario","text":"","title":"Dicion\u00e1rio"},{"location":"eap/#10-software-para-mesa-de-pebolim-para-treinamento","text":"","title":"1.0 Software para Mesa de Pebolim para Treinamento"},{"location":"eap/#11-pudm","text":"O Pebolim Unified Data Model (PUDM) \u00e9 uma modelagem de dados criada para permitir a utiliza\u00e7\u00e3o de diversos Machine Controllers na arquitetura da mesa de pebolim. A ideia deste modelo de dados surge a partir do conceito de Interface nas linguagem de programa\u00e7\u00e3o orientadas a objetos, onde esta representa uma estrutura que funciona como um contrato, garantindo que as classes que a pertencem implementem determinados m\u00e9todos. O PUDM faz este papel de contrato, por\u00e9m para os sistemas envolvidos na mesa de pebolim automatizada, governando como deve ser feita a comunica\u00e7\u00e3o entre o controlador desta mesa com o Servidor de Decis\u00e3o e garantindo a compatibilidade entre os sistemas.","title":"1.1 PUDM"},{"location":"eap/#enao-e","text":"","title":"\u00c9/N\u00e3o \u00c9"},{"location":"eap/#pacotes-de-trabalho","text":"1.1.1 Defini\u00e7\u00e3o de padr\u00e3o de comunica\u00e7\u00e3o: Definir qual formato de comunica\u00e7\u00e3o e qual o padr\u00e3o a ser utilizado entre o cliente e o servidor do PUDM 1.1.2 Defini\u00e7\u00e3o de requisitos para compatibilidade de implementa\u00e7\u00e3o: Definir quais s\u00e3o as fun\u00e7\u00f5es necess\u00e1rias para que um sistema seja compat\u00edvel com o PUDM","title":"Pacotes de trabalho"},{"location":"eap/#12-controlador-de-maquina","text":"O Controlador de Maquina representa o componente que interage diretamente com os motores na mesa de pebolim. \u00c9 respons\u00e1vel por converter os comandos recebidos do Servidor de Decis\u00e3o em movimentos na mesa. Al\u00e9m disso, \u00e9 respons\u00e1vel por coletar os dados f\u00edsicos e enviar para o Servidor de Decis\u00e3o. Implementa o lado cliente do PUDM.","title":"1.2 Controlador de M\u00e1quina"},{"location":"eap/#enao-e_1","text":"","title":"\u00c9/N\u00e3o \u00c9"},{"location":"eap/#pacotes-de-trabalho_1","text":"","title":"Pacotes de trabalho"},{"location":"eap/#13-servidor-de-decisao","text":"O Servidor de Decis\u00e3o do Pebolim \u00e9 a camada respons\u00e1vel por receber os dados encaminhados pela interface PUDM e realizar infer\u00eancias de controle a partir desses dados com os estados disponibilizados pelo Machine Controller da mesa. A ideia de criar um servi\u00e7o independente para fazer decis\u00e3o e usar uma interface para interagir diretamente com comandos de controle \u00e9 tirar a respons\u00e1bilidade de formata\u00e7\u00e3o e adapta\u00e7\u00e3o de dados e garantir uma respons\u00e1bilidade \u00fanica por camada dentro do projeto. No caso o servidor de decis\u00e3o seguiria a seguintes etapas: figura 1: fluxo principal do servidor de decis\u00e3o. Como abordado na figura acima, o servidor come\u00e7a tratando os dados encaminhados pela interface para o padr\u00e3o adequado ao processamento. Como estamos lidando com dados gerados por v\u00eddeos, \u00e9 encaminhado os dados atrav\u00e9s de um JSON contendo a posi\u00e7\u00e3o das hastes e o frame atual gerado. Quando \u00e9 feito o decode da image, \u00e9 aplicado um algoritmo de rastreamento usando t\u00e9cnicas de vis\u00e3o computacional, onde \u00e9 estimada a posi\u00e7\u00e3o da bola atrav\u00e9s dos hist\u00f3rico de frames encaminhados durante o jogo de Pebolim. Com a posi\u00e7\u00e3o da bola e os dados da posi\u00e7\u00e3o da haste, \u00e9 analisado a dist\u00e2ncia de ambos e um calculo de trajet\u00f3ria \u00e9 estimado. Com os c\u00e1lculos realizado, \u00e9 poss\u00edvel designar uma dire\u00e7\u00e3o para a haste mais pr\u00f3xima a bola localizada e \u00e9 levantado a possibilidade de rota\u00e7\u00e3o do eixo da haste para contra ataque. Ap\u00f3s a execu\u00e7\u00e3o de todo o fluxo, \u00e9 feito um encode de todos os dados recolhidos nas etapas descritas anteriormente e uma nova mensagem \u00e9 encaminhada de volta para a interface de controle com os novos comandos a serem designados aos motores.","title":"1.3 Servidor de Decis\u00e3o"},{"location":"eap/#enao-e_2","text":"","title":"\u00c9/N\u00e3o \u00c9"},{"location":"eap/#pacotes-de-trabalho_2","text":"","title":"Pacotes de trabalho"}]}